# Generated by Django 3.2.12 on 2022-04-28 00:01

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('empresas', '0003_auto_20220415_0008'),
        ('general', '0003_auto_20220415_0001'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='InvestorProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('horizon', models.CharField(blank=True, choices=[('long-term', 'Long Term'), ('medium-term', 'Medium Term'), ('short-term', 'Short Term')], max_length=500, null=True)),
                ('risk_profile', models.TextField(blank=True, choices=[('very-agressive', 'Perfil muy agresivo'), ('agressive', 'Perfil agresivo'), ('regular', 'Perfil regular'), ('conservative', 'Perfil conservador'), ('very-conservative', 'Perfil muy conservador')], null=True)),
                ('investor_type', models.CharField(blank=True, choices=[('active', 'Activo'), ('intermediate', 'Intermedio'), ('pasive', 'Pasivo'), ('gambler', 'Especulador')], max_length=500, null=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_investor_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User investor profile',
                'verbose_name_plural': 'Users investor profiles',
                'db_table': 'user_investor_profile',
            },
        ),
        migrations.CreateModel(
            name='RoboAdvisorQuestionPortfolioComposition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('horizon_time', models.PositiveIntegerField(default=0)),
                ('horizon_period', models.CharField(choices=[('minutes', 'Minutos'), ('hours', 'Horas'), ('days', 'Días'), ('weeks', 'Semanas'), ('months', 'Meses'), ('years', 'Años')], default=('months', 'Meses'), max_length=500)),
                ('comment', models.TextField(default='')),
                ('sector_knowledge', models.CharField(blank=True, choices=[('expert', 'Experto'), ('pro', 'Profesional'), ('intermediate', 'Intermedio'), ('basic', 'Básico'), ('null', 'Nulo')], default=4, max_length=500, null=True)),
                ('asset_knowledge', models.CharField(blank=True, choices=[('expert', 'Experto'), ('pro', 'Profesional'), ('intermediate', 'Intermedio'), ('basic', 'Básico'), ('null', 'Nulo')], default=4, max_length=500, null=True)),
                ('amount_time_studied', models.PositiveIntegerField(default=0)),
                ('period_time_studied', models.CharField(choices=[('minutes', 'Minutos'), ('hours', 'Horas'), ('days', 'Días'), ('weeks', 'Semanas'), ('months', 'Meses'), ('years', 'Años')], default=('months', 'Meses'), max_length=500)),
                ('number_shares', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('capital_invested', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('sector_relationship', models.TextField(default='')),
                ('asset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='empresas.company')),
            ],
            options={
                'verbose_name': 'Pregunta: Composición portfolio empresas',
                'verbose_name_plural': 'Pregunta: Composición portfolio empresas',
                'db_table': 'roboadvisor_stocks_portfolio_positions',
            },
        ),
        migrations.CreateModel(
            name='RoboAdvisorService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.PositiveBigIntegerField(blank=True, null=True)),
                ('order', models.PositiveIntegerField(blank=True, null=True)),
                ('available', models.BooleanField(default=True)),
                ('title', models.CharField(blank=True, max_length=500, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('slug', models.CharField(blank=True, choices=[('company-match', 'company-match'), ('investor-profile', 'investor-profile'), ('optimize-my-portfolio', 'optimize-my-portfolio')], max_length=500, null=True)),
                ('thumbnail', models.CharField(blank=True, max_length=500, null=True)),
                ('template_result', models.CharField(blank=True, max_length=500, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='general.category')),
                ('tags', models.ManyToManyField(blank=True, to='general.Tag')),
            ],
            options={
                'verbose_name': 'Roboadvisor service',
                'verbose_name_plural': 'Roboadvisor services',
                'db_table': 'roboadvisor_services',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='RoboAdvisorServiceStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=500, null=True)),
                ('slug', models.CharField(blank=True, max_length=500, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('order', models.PositiveIntegerField(blank=True, null=True)),
                ('url', models.CharField(blank=True, choices=[('stocks-portfolio', 'stocks-portfolio'), ('composition', 'composition'), ('risk-aversion', 'risk-aversion'), ('weights', 'weights'), ('experience', 'experience'), ('financial', 'financial'), ('analysis', 'analysis')], max_length=500, null=True)),
                ('template', models.CharField(blank=True, max_length=500, null=True)),
                ('service_related', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='steps', to='roboadvisor.roboadvisorservice')),
            ],
            options={
                'verbose_name': 'Roboadvisor service step',
                'verbose_name_plural': 'Roboadvisor service steps',
                'db_table': 'roboadvisor_service_steps',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='RoboAdvisorUserServiceActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_started', models.DateTimeField(auto_now_add=True)),
                ('date_finished', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('finished', 'Finished'), ('abandoned', 'Abandoned'), ('started', 'Started'), ('not-payed', 'Not payed')], default=('started', 'Started'), max_length=500)),
                ('service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='roboadvisor.roboadvisorservice')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'RoboAdvisor Service Activity',
                'verbose_name_plural': 'RoboAdvisor Service Activity',
                'db_table': 'roboadvisor_service_activity',
            },
        ),
        migrations.CreateModel(
            name='TemporaryInvestorProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('horizon', models.CharField(blank=True, choices=[('long-term', 'Long Term'), ('medium-term', 'Medium Term'), ('short-term', 'Short Term')], max_length=500, null=True)),
                ('risk_profile', models.TextField(blank=True, choices=[('very-agressive', 'Perfil muy agresivo'), ('agressive', 'Perfil agresivo'), ('regular', 'Perfil regular'), ('conservative', 'Perfil conservador'), ('very-conservative', 'Perfil muy conservador')], null=True)),
                ('investor_type', models.CharField(blank=True, choices=[('active', 'Activo'), ('intermediate', 'Intermedio'), ('pasive', 'Pasivo'), ('gambler', 'Especulador')], max_length=500, null=True)),
                ('profile_related', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='temporary_investor', to='roboadvisor.investorprofile')),
                ('service_activity', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='roboadvisor.roboadvisoruserserviceactivity')),
            ],
            options={
                'verbose_name': 'Temporary investor profile',
                'verbose_name_plural': 'Temporary investor profiles',
                'db_table': 'temporary_investor_profile',
            },
        ),
        migrations.CreateModel(
            name='RoboAdvisorUserServiceStepActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_started', models.DateTimeField(blank=True, null=True)),
                ('date_finished', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('finished', 'Finished'), ('abandoned', 'Abandoned'), ('started', 'Started'), ('not-payed', 'Not payed')], default=('started', 'Started'), max_length=500)),
                ('step', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='roboadvisor.roboadvisorservicestep')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'RoboAdvisor Service Step Activity',
                'verbose_name_plural': 'RoboAdvisor Service Steps Activity',
                'db_table': 'roboadvisor_service_step_activity',
            },
        ),
        migrations.CreateModel(
            name='RoboAdvisorQuestionStocksPortfolio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_activity', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='roboadvisor.roboadvisoruserserviceactivity')),
                ('service_step', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='roboadvisor.roboadvisoruserservicestepactivity')),
                ('stocks', models.ManyToManyField(to='roboadvisor.RoboAdvisorQuestionPortfolioComposition')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Pregunta: Portfolio',
                'verbose_name_plural': 'Pregunta: Portfolio',
                'db_table': 'roboadvisor_stocks_portfolio',
            },
        ),
        migrations.CreateModel(
            name='RoboAdvisorQuestionRiskAversion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('horizon_time', models.PositiveIntegerField(default=0)),
                ('horizon_period', models.CharField(choices=[('minutes', 'Minutos'), ('hours', 'Horas'), ('days', 'Días'), ('weeks', 'Semanas'), ('months', 'Meses'), ('years', 'Años')], default=('months', 'Meses'), max_length=500)),
                ('comment', models.TextField(default='')),
                ('volatilidad', models.IntegerField(blank=True, choices=[(1, 'Riesgo'), (2, 'Oportunidad'), (3, 'No le presto atención')], null=True)),
                ('percentage_for_onefive', models.IntegerField(blank=True, null=True)),
                ('percentage_for_three', models.IntegerField(blank=True, null=True)),
                ('percentage_for_fourfive', models.IntegerField(blank=True, null=True)),
                ('percentage_for_zerofive', models.IntegerField(blank=True, null=True)),
                ('percentage_in_one_stock', models.IntegerField(blank=True, null=True)),
                ('number_stocks', models.IntegerField(blank=True, choices=[(0, 'Ninguna'), (1, 'Una'), (2, 'Dos'), (3, 'Tres'), (4, 'Cuatro'), (5, 'Cinco'), (6, 'Entre 5 y 10'), (7, 'Entre 10 y 20'), (8, 'Más de 20')], null=True)),
                ('service_activity', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='roboadvisor.roboadvisoruserserviceactivity')),
                ('service_step', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='roboadvisor.roboadvisoruserservicestepactivity')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Pregunta: Aversión al riesgo',
                'verbose_name_plural': 'Pregunta: Aversión al riesgo',
                'db_table': 'roboadvisor_risk_aversion',
            },
        ),
        migrations.AddField(
            model_name='roboadvisorquestionportfoliocomposition',
            name='service_activity',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='roboadvisor.roboadvisoruserserviceactivity'),
        ),
        migrations.AddField(
            model_name='roboadvisorquestionportfoliocomposition',
            name='service_step',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='roboadvisor.roboadvisoruserservicestepactivity'),
        ),
        migrations.AddField(
            model_name='roboadvisorquestionportfoliocomposition',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='RoboAdvisorQuestionPortfolioAssetsWeight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('etfs_percentage', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('stocks_percentage', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('bonds_percentage', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('real_estate_percentage', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('sofipos_percentage', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('cryptos_percentage', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('service_activity', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='roboadvisor.roboadvisoruserserviceactivity')),
                ('service_step', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='roboadvisor.roboadvisoruserservicestepactivity')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Pregunta: Gusto por activos',
                'verbose_name_plural': 'Pregunta: Gusto por activos',
                'db_table': 'roboadvisor_assets_weight',
            },
        ),
        migrations.CreateModel(
            name='RoboAdvisorQuestionInvestorExperience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.PositiveIntegerField(blank=True, default=18, null=True)),
                ('objectif', models.CharField(blank=True, choices=[(1, 'Generar ingresos pasivos'), (2, 'Generar un patrimonio'), (3, 'Ahorrar'), (4, 'Ganar dinero rápido')], default=1, max_length=500, null=True)),
                ('investor_type_self_definition', models.CharField(blank=True, choices=[('active', 'Activo'), ('intermediate', 'Intermedio'), ('pasive', 'Pasivo'), ('gambler', 'Especulador')], default=('intermediate', 'Intermedio'), max_length=500, null=True)),
                ('percentage_invested', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('percentage_anualized_revenue', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('time_investing_exp', models.PositiveIntegerField(default=0)),
                ('period_investing_exp', models.CharField(choices=[('minutes', 'Minutos'), ('hours', 'Horas'), ('days', 'Días'), ('weeks', 'Semanas'), ('months', 'Meses'), ('years', 'Años')], default=('months', 'Meses'), max_length=500)),
                ('service_activity', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='roboadvisor.roboadvisoruserserviceactivity')),
                ('service_step', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='roboadvisor.roboadvisoruserservicestepactivity')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Pregunta: Experiencia como inversor',
                'verbose_name_plural': 'Pregunta: Experiencia como inversor',
                'db_table': 'roboadvisor_investor_experience',
            },
        ),
        migrations.CreateModel(
            name='RoboAdvisorQuestionFinancialSituation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('average_income', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('average_expense', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('debt', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('recurrent_savings', models.BooleanField(default=False)),
                ('recurrent_debts', models.BooleanField(default=False)),
                ('savings', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('debt_percentage', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('saving_percentage', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('number_sources_income', models.IntegerField(blank=True, default=1)),
                ('currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='general.currency')),
                ('service_activity', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='roboadvisor.roboadvisoruserserviceactivity')),
                ('service_step', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='roboadvisor.roboadvisoruserservicestepactivity')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'RoboAdvisor Financial Situation',
                'verbose_name_plural': 'RoboAdvisor Financial Situations',
                'db_table': 'roboadvisor_financial_situation',
            },
        ),
        migrations.CreateModel(
            name='RoboAdvisorQuestionCompanyAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('horizon_time', models.PositiveIntegerField(default=0)),
                ('horizon_period', models.CharField(choices=[('minutes', 'Minutos'), ('hours', 'Horas'), ('days', 'Días'), ('weeks', 'Semanas'), ('months', 'Meses'), ('years', 'Años')], default=('months', 'Meses'), max_length=500)),
                ('comment', models.TextField(default='')),
                ('sector_knowledge', models.CharField(blank=True, choices=[('expert', 'Experto'), ('pro', 'Profesional'), ('intermediate', 'Intermedio'), ('basic', 'Básico'), ('null', 'Nulo')], default=4, max_length=500, null=True)),
                ('asset_knowledge', models.CharField(blank=True, choices=[('expert', 'Experto'), ('pro', 'Profesional'), ('intermediate', 'Intermedio'), ('basic', 'Básico'), ('null', 'Nulo')], default=4, max_length=500, null=True)),
                ('amount_time_studied', models.PositiveIntegerField(default=0)),
                ('period_time_studied', models.CharField(choices=[('minutes', 'Minutos'), ('hours', 'Horas'), ('days', 'Días'), ('weeks', 'Semanas'), ('months', 'Meses'), ('years', 'Años')], default=('months', 'Meses'), max_length=500)),
                ('sector_relationship', models.TextField(default='')),
                ('result', models.CharField(blank=True, choices=[('Buy', 'Comprar'), ('Sell', 'Vender'), ('Hold', 'Mantener'), ('Error', 'Mantener')], max_length=500, null=True)),
                ('asset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='empresas.company')),
                ('service_activity', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='roboadvisor.roboadvisoruserserviceactivity')),
                ('service_step', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='roboadvisor.roboadvisoruserservicestepactivity')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Pregunta: Decisión compañía',
                'verbose_name_plural': 'Pregunta: Decisión compañía',
                'db_table': 'roboadvisor_company_analysis',
            },
        ),
    ]
