# Generated by Django 3.2.12 on 2022-04-15 19:24

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('empresas', '0003_auto_20220415_0008'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('roboadvisor', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='RoboAdvisorQuestionPortfolioComposition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sector_knowledge', models.IntegerField(blank=True, choices=[(1, 'Experto'), (2, 'Profesional'), (3, 'Intermedio'), (4, 'Básico'), (5, 'Nulo')], null=True)),
                ('asset_knowledge', models.IntegerField(blank=True, choices=[(1, 'Experto'), (2, 'Profesional'), (3, 'Intermedio'), (4, 'Básico'), (5, 'Nulo')], null=True)),
                ('amount_time_studied', models.PositiveIntegerField(default=0)),
                ('period_time_studied', models.PositiveIntegerField(choices=[(1, 'Horas'), (2, 'Días'), (3, 'Semanas'), (4, 'Meses'), (5, 'Años')], default=4)),
                ('number_shares', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('capital_invested', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('sector_relationship', models.TextField(default='')),
                ('time_studing', models.IntegerField(blank=True, choices=[(0, '0'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10'), (11, '11'), (12, '12'), (13, '13'), (14, '14'), (15, '15'), (16, '16'), (17, '17'), (18, '18'), (19, '19'), (20, '20'), (21, '21'), (22, '22'), (23, '23'), (24, '24')], null=True)),
                ('days_studing', models.IntegerField(blank=True, choices=[(0, '0'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7')], null=True)),
                ('asset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='empresas.company')),
            ],
            options={
                'verbose_name': 'Pregunta: Composición portfolio empresas',
                'verbose_name_plural': 'Pregunta: Composición portfolio empresas',
                'db_table': 'roboadvisor_stocks_portfolio_positions',
            },
        ),
        migrations.AlterModelOptions(
            name='roboadvisorservice',
            options={'ordering': ['order'], 'verbose_name': 'Roboadvisor services'},
        ),
        migrations.CreateModel(
            name='RoboAdvisorQuestionStocksPortfolio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_started', models.DateTimeField(auto_now_add=True)),
                ('date_finished', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, choices=[(1, 'Finished'), (2, 'Abandoned'), (3, 'Asked'), (4, 'Skiped')], null=True)),
                ('slug', models.CharField(blank=True, max_length=500, null=True)),
                ('service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='roboadvisor.roboadvisorservice')),
                ('stocks', models.ManyToManyField(to='roboadvisor.RoboAdvisorQuestionPortfolioComposition')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Pregunta: Portfolio',
                'verbose_name_plural': 'Pregunta: Portfolio',
                'db_table': 'roboadvisor_stocks_portfolio',
            },
        ),
        migrations.CreateModel(
            name='RoboAdvisorQuestionRiskAversion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_started', models.DateTimeField(auto_now_add=True)),
                ('date_finished', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, choices=[(1, 'Finished'), (2, 'Abandoned'), (3, 'Asked'), (4, 'Skiped')], null=True)),
                ('slug', models.CharField(blank=True, max_length=500, null=True)),
                ('volatilidad', models.IntegerField(blank=True, choices=[(1, 'Riesgo'), (2, 'Oportunidad'), (3, 'No le presto atención')], null=True)),
                ('percentage_for_onefive', models.IntegerField(blank=True, null=True)),
                ('percentage_for_three', models.IntegerField(blank=True, null=True)),
                ('percentage_for_fourfive', models.IntegerField(blank=True, null=True)),
                ('percentage_for_zerofive', models.IntegerField(blank=True, null=True)),
                ('percentage_in_one_stock', models.IntegerField(blank=True, null=True)),
                ('number_stocks', models.IntegerField(blank=True, choices=[(0, 'Ninguna'), (1, 'Una'), (2, 'Dos'), (3, 'Tres'), (4, 'Cuatro'), (5, 'Cinco'), (6, 'Entre 5 y 10'), (7, 'Entre 10 y 20'), (8, 'Más de 20')], null=True)),
                ('service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='roboadvisor.roboadvisorservice')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Pregunta: Aversión al riesgo',
                'verbose_name_plural': 'Pregunta: Aversión al riesgo',
                'db_table': 'roboadvisor_risk_aversion',
            },
        ),
        migrations.CreateModel(
            name='RoboAdvisorQuestionPortfolioAssetsWeight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_started', models.DateTimeField(auto_now_add=True)),
                ('date_finished', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, choices=[(1, 'Finished'), (2, 'Abandoned'), (3, 'Asked'), (4, 'Skiped')], null=True)),
                ('slug', models.CharField(blank=True, max_length=500, null=True)),
                ('etfs_percentage', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('stocks_percentage', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('bonds_percentage', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('real_estate_percentage', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('sofipos_percentage', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('cryptos_percentage', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='roboadvisor.roboadvisorservice')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Pregunta: Gusto por activos',
                'verbose_name_plural': 'Pregunta: Gusto por activos',
                'db_table': 'roboadvisor_assets_weight',
            },
        ),
        migrations.CreateModel(
            name='RoboAdvisorQuestionInvestorExperience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_started', models.DateTimeField(auto_now_add=True)),
                ('date_finished', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, choices=[(1, 'Finished'), (2, 'Abandoned'), (3, 'Asked'), (4, 'Skiped')], null=True)),
                ('slug', models.CharField(blank=True, max_length=500, null=True)),
                ('sector_knowledge', models.IntegerField(blank=True, choices=[(1, 'Experto'), (2, 'Profesional'), (3, 'Intermedio'), (4, 'Básico'), (5, 'Nulo')], null=True)),
                ('asset_knowledge', models.IntegerField(blank=True, choices=[(1, 'Experto'), (2, 'Profesional'), (3, 'Intermedio'), (4, 'Básico'), (5, 'Nulo')], null=True)),
                ('amount_time_studied', models.PositiveIntegerField(default=0)),
                ('period_time_studied', models.PositiveIntegerField(choices=[(1, 'Horas'), (2, 'Días'), (3, 'Semanas'), (4, 'Meses'), (5, 'Años')], default=4)),
                ('number_shares', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('capital_invested', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('sector_relationship', models.TextField(default='')),
                ('time_studing', models.IntegerField(blank=True, choices=[(0, '0'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10'), (11, '11'), (12, '12'), (13, '13'), (14, '14'), (15, '15'), (16, '16'), (17, '17'), (18, '18'), (19, '19'), (20, '20'), (21, '21'), (22, '22'), (23, '23'), (24, '24')], null=True)),
                ('days_studing', models.IntegerField(blank=True, choices=[(0, '0'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7')], null=True)),
                ('age', models.PositiveIntegerField(blank=True, null=True)),
                ('objectif', models.IntegerField(blank=True, choices=[(1, 'Generar ingresos pasivos'), (2, 'Generar un patrimonio'), (3, 'Ahorrar'), (4, 'Ganar dinero rápido')], null=True)),
                ('investor_type_self_definition', models.IntegerField(blank=True, choices=[(1, 'Activo'), (2, 'Intermedio'), (3, 'Pasivo'), (4, 'Especulador')], null=True)),
                ('percentage_invested', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('already_investing', models.BooleanField(default=False)),
                ('percentage_anualized_revenue', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('years_investing', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='roboadvisor.roboadvisorservice')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Pregunta: Historial del inversor',
                'verbose_name_plural': 'Pregunta: Historial del inversor',
                'db_table': 'roboadvisor_investor experience',
            },
        ),
        migrations.CreateModel(
            name='RoboAdvisorQuestionHorizon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_started', models.DateTimeField(auto_now_add=True)),
                ('date_finished', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, choices=[(1, 'Finished'), (2, 'Abandoned'), (3, 'Asked'), (4, 'Skiped')], null=True)),
                ('slug', models.CharField(blank=True, max_length=500, null=True)),
                ('horizon_years', models.PositiveIntegerField(blank=True, null=True)),
                ('comment', models.TextField(default='')),
                ('service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='roboadvisor.roboadvisorservice')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Pregunta: Horizote de inversión',
                'verbose_name_plural': 'Pregunta: Horizote de inversión',
                'db_table': 'roboadvisor_horizon',
            },
        ),
        migrations.CreateModel(
            name='RoboAdvisorQuestionFinancialSituation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_started', models.DateTimeField(auto_now_add=True)),
                ('date_finished', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, choices=[(1, 'Finished'), (2, 'Abandoned'), (3, 'Asked'), (4, 'Skiped')], null=True)),
                ('slug', models.CharField(blank=True, max_length=500, null=True)),
                ('average_income', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('average_expense', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('debt', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('recurrent_savings', models.BooleanField(default=False)),
                ('recurrent_debts', models.BooleanField(default=False)),
                ('savings', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('debt_percentage', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('saving_percentage', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('number_sources_income', models.IntegerField(blank=True, default=1)),
                ('service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='roboadvisor.roboadvisorservice')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'RoboAdvisor Financial Situation',
                'verbose_name_plural': 'RoboAdvisor Financial Situations',
                'db_table': 'roboadvisor_financial_situation',
            },
        ),
        migrations.CreateModel(
            name='RoboAdvisorQuestionCompanyAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_started', models.DateTimeField(auto_now_add=True)),
                ('date_finished', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, choices=[(1, 'Finished'), (2, 'Abandoned'), (3, 'Asked'), (4, 'Skiped')], null=True)),
                ('slug', models.CharField(blank=True, max_length=500, null=True)),
                ('sector_knowledge', models.IntegerField(blank=True, choices=[(1, 'Experto'), (2, 'Profesional'), (3, 'Intermedio'), (4, 'Básico'), (5, 'Nulo')], null=True)),
                ('asset_knowledge', models.IntegerField(blank=True, choices=[(1, 'Experto'), (2, 'Profesional'), (3, 'Intermedio'), (4, 'Básico'), (5, 'Nulo')], null=True)),
                ('amount_time_studied', models.PositiveIntegerField(default=0)),
                ('period_time_studied', models.PositiveIntegerField(choices=[(1, 'Horas'), (2, 'Días'), (3, 'Semanas'), (4, 'Meses'), (5, 'Años')], default=4)),
                ('number_shares', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('capital_invested', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('sector_relationship', models.TextField(default='')),
                ('time_studing', models.IntegerField(blank=True, choices=[(0, '0'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10'), (11, '11'), (12, '12'), (13, '13'), (14, '14'), (15, '15'), (16, '16'), (17, '17'), (18, '18'), (19, '19'), (20, '20'), (21, '21'), (22, '22'), (23, '23'), (24, '24')], null=True)),
                ('days_studing', models.IntegerField(blank=True, choices=[(0, '0'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7')], null=True)),
                ('result', models.IntegerField(blank=True, choices=[(1, 'Buy'), (2, 'Sell'), (3, 'Hold'), (4, 'Error')], null=True)),
                ('asset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='empresas.company')),
                ('service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='roboadvisor.roboadvisorservice')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Pregunta: Decisión compañía',
                'verbose_name_plural': 'Pregunta: Decisión compañía',
                'db_table': 'roboadvisor_company_analysis',
            },
        ),
    ]
